{"version":3,"sources":["components/Form/Form.module.css","components/ContactList/ContactList.module.css","components/Title/Title.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-selectors.js","components/Form/Form.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/Title/Title.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","input","payload","id","uuidv4","name","number","getContacts","deleteContact","changeFilter","state","phonebook","contacts","getFilter","filter","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleContactData","e","target","value","onSubmit","newContact","preventDefault","some","contact","toLocaleLowerCase","alert","phonebookActions","className","s","type","pattern","title","required","onChange","button","Filter","inputValue","ContactList","filteredContacts","toLowerCase","includes","map","buttonDelete","onClick","Title","App","createReducer","actions","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","phonebookPersistConfig","key","storage","store","configureStore","reducer","persistReducer","phonebookReducer","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.653b622f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addContact\":\"Form_addContact__GEI3F\",\"button\":\"Form_button__baYOq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonDelete\":\"ContactList_buttonDelete__Rh5RN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__gp0zy\"};","import { v4 as uuidv4 } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst addContact = createAction(\"phonebook/add\", (input) => ({\n  payload: {\n    id: uuidv4(),\n    name: input.name,\n    number: input.number,\n  },\n}));\nconst getContacts = createAction(\"phonebook/get\");\nconst deleteContact = createAction(\"phonebook/delete\");\nconst changeFilter = createAction(\"phonebook/changeFilter\");\n\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\nexport default { addContact, deleteContact, changeFilter, getContacts };\n","export const getContacts = (state) => state.phonebook.contacts;\nexport const getFilter = (state) => state.phonebook.filter;\n","import React, { useState } from \"react\";\n// import PropTypes from \"prop-types\";\nimport s from \"./Form.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport phonebookActions from \"../../redux/phonebook/phonebook-actions\";\nimport { getContacts } from \"../../redux/phonebook/phonebook-selectors\";\n\nexport default function ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleContactData = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const checkExistAndAdd = (newContact) => {\n    contacts.some(\n      (contact) =>\n        contact.name.toLocaleLowerCase() ===\n          newContact.name.toLocaleLowerCase() ||\n        contacts.some((contact) => contact.number === newContact.number)\n    )\n      ? alert(\n          `Friend ${newContact.name} or number ${newContact.number} is alredy exist`\n        )\n      : dispatch(phonebookActions.addContact(newContact));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    checkExistAndAdd({ name, number });\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.addContact}>\n      <label>\n        Name\n        <input\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleContactData}\n        />\n      </label>\n\n      <label>\n        Number\n        <input\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleContactData}\n        />\n      </label>\n\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport phonebookActions from \"../../redux/phonebook/phonebook-actions\";\nimport { getFilter } from \"../../redux/phonebook/phonebook-selectors\";\n\nexport default function Filter() {\n  const inputValue = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={(e) =>\n            dispatch(phonebookActions.changeFilter(e.target.value))\n          }\n        />\n      </label>\n    </>\n  );\n}\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport phonebookActions from \"../../redux/phonebook/phonebook-actions\";\nimport {\n  getContacts,\n  getFilter,\n} from \"../../redux/phonebook/phonebook-selectors\";\n\nexport default function ContactList() {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <ul>\n      {filteredContacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}: {number}\n          <button\n            className={s.buttonDelete}\n            type=\"button\"\n            onClick={() => dispatch(phonebookActions.deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import s from \"./Title.module.css\";\n\nfunction Title({ title }) {\n  return <p className={s.title}>{title}</p>;\n}\nexport default Title;\n","import React from \"react\";\nimport ContactForm from \"./components/Form/Form\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Title from \"./components/Title/Title\";\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Title title=\"Phonebook\" />\n      <ContactForm />\n\n      <Title title=\"Contacts\" />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { combineReducers } from \"redux\";\n\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./phonebook-actions\";\n\nconst contacts = createReducer([], {\n  [actions.addContact]: (state, { payload }) => {\n    const contacts = [...state, payload];\n\n    return contacts;\n  },\n  [actions.deleteContact]: (state, { payload }) => {\n    const contacts = state.filter(({ id }) => id !== payload);\n\n    return [...contacts];\n  },\n});\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n\nimport phonebookReducer from \"./phonebook/phonebook-reducer\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst phonebookPersistConfig = {\n  key: \"phonebook\",\n  storage,\n};\n\nexport const store = configureStore({\n  reducer: {\n    phonebook: persistReducer(phonebookPersistConfig, phonebookReducer),\n  },\n  middleware,\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}